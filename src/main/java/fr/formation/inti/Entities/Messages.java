package fr.formation.inti.Entities;
// Generated 26 avr. 2019 11:17:57 by Hibernate Tools 5.1.10.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Messages generated by hbm2java
 */
@Entity
@Table(name = "messages", catalog = "projet")
public class Messages implements java.io.Serializable {

	private Integer idMessages;
	private Utilisateurs utilisateursByIdUtilisateurReceveur;
	private Utilisateurs utilisateursByIdUtilisateurExpediteur;
	private String titre;
	private Date date;
	private String texte;

	public Messages() {
	}

	public Messages(Utilisateurs utilisateursByIdUtilisateurReceveur,
			Utilisateurs utilisateursByIdUtilisateurExpediteur, String titre, Date date, String texte) {
		this.utilisateursByIdUtilisateurReceveur = utilisateursByIdUtilisateurReceveur;
		this.utilisateursByIdUtilisateurExpediteur = utilisateursByIdUtilisateurExpediteur;
		this.titre = titre;
		this.date = date;
		this.texte = texte;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idMessages", unique = true, nullable = false)
	public Integer getIdMessages() {
		return this.idMessages;
	}

	public void setIdMessages(Integer idMessages) {
		this.idMessages = idMessages;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idUtilisateurReceveur", nullable = false)
	public Utilisateurs getUtilisateursByIdUtilisateurReceveur() {
		return this.utilisateursByIdUtilisateurReceveur;
	}

	public void setUtilisateursByIdUtilisateurReceveur(Utilisateurs utilisateursByIdUtilisateurReceveur) {
		this.utilisateursByIdUtilisateurReceveur = utilisateursByIdUtilisateurReceveur;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idUtilisateurExpediteur", nullable = false)
	public Utilisateurs getUtilisateursByIdUtilisateurExpediteur() {
		return this.utilisateursByIdUtilisateurExpediteur;
	}

	public void setUtilisateursByIdUtilisateurExpediteur(Utilisateurs utilisateursByIdUtilisateurExpediteur) {
		this.utilisateursByIdUtilisateurExpediteur = utilisateursByIdUtilisateurExpediteur;
	}

	@Column(name = "Titre", nullable = false, length = 45)
	public String getTitre() {
		return this.titre;
	}

	public void setTitre(String titre) {
		this.titre = titre;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "Texte", nullable = false, length = 65535)
	public String getTexte() {
		return this.texte;
	}

	public void setTexte(String texte) {
		this.texte = texte;
	}

}
