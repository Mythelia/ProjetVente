package fr.formation.inti.entities;
// Generated 29 avr. 2019 15:09:20 by Hibernate Tools 5.1.10.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Motsclefs generated by hbm2java
 */
@Entity
@Table(name = "motsclefs", catalog = "projet")
public class MotsClefs implements java.io.Serializable {

	private Integer idMotClef;
	private String motClef;
	private Set<Alerte> alertes = new HashSet<Alerte>(0);
	private Set<Annonces> annonceses = new HashSet<Annonces>(0);
	private String motClefs;

	public MotsClefs() {
	}

	public MotsClefs(String motClef) {
		this.motClef = motClef;
	}

	public MotsClefs(String motClef, Set<Alerte> alertes, Set<Annonces> annonceses) {
		this.motClef = motClef;
		this.alertes = alertes;
		this.annonceses = annonceses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idMotClef", unique = true, nullable = false)
	public Integer getIdMotClef() {
		return this.idMotClef;
	}

	public void setIdMotClef(Integer idMotClef) {
		this.idMotClef = idMotClef;
	}

	@Column(name = "MotClef", nullable = false, length = 45)
	public String getMotClef() {
		return this.motClef;
	}

	public void setMotClef(String motClef) {
		this.motClef = motClef;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "motsclefs_has_alerte", catalog = "projet", joinColumns = {
			@JoinColumn(name = "motsclefs_idMotClef", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "alerte_idAlerte", nullable = false, updatable = false) })
	public Set<Alerte> getAlertes() {
		return this.alertes;
	}

	public void setAlertes(Set<Alerte> alertes) {
		this.alertes = alertes;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "motsclefs_has_annonces", catalog = "projet", joinColumns = {
			@JoinColumn(name = "motsclefs_idMotClef", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "annonces_idAnnonces", nullable = false, updatable = false) })
	public Set<Annonces> getAnnonceses() {
		return this.annonceses;
	}

	public void setAnnonceses(Set<Annonces> annonceses) {
		this.annonceses = annonceses;
	}

	@Override
	public String toString() {
		return motClef;
	}

}
